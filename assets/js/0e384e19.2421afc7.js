"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[671],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return f}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),d=l(n),f=o,m=d["".concat(s,".").concat(f)]||d[f]||p[f]||i;return n?r.createElement(m,a(a({ref:t},u),{},{components:n})):r.createElement(m,a({ref:t},u))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=d;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:o,a[1]=c;for(var l=2;l<i;l++)a[l]=n[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3919:function(e,t,n){function r(e){return!0===/^(\w*:|\/\/)/.test(e)}function o(e){return void 0!==e&&!r(e)}n.d(t,{b:function(){return r},Z:function(){return o}})},4996:function(e,t,n){n.d(t,{C:function(){return i},Z:function(){return a}});var r=n(2263),o=n(3919);function i(){var e=(0,r.Z)().siteConfig,t=(e=void 0===e?{}:e).baseUrl,n=void 0===t?"/":t,i=e.url;return{withBaseUrl:function(e,t){return function(e,t,n,r){var i=void 0===r?{}:r,a=i.forcePrependBaseUrl,c=void 0!==a&&a,s=i.absolute,l=void 0!==s&&s;if(!n)return n;if(n.startsWith("#"))return n;if((0,o.b)(n))return n;if(c)return t+n;var u=n.startsWith(t)?n:t+n.replace(/^\//,"");return l?e+u:u}(i,n,e,t)}}}function a(e,t){return void 0===t&&(t={}),(0,i().withBaseUrl)(e,t)}},426:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},metadata:function(){return l},toc:function(){return u},default:function(){return d}});var r=n(7462),o=n(3366),i=(n(7294),n(3905)),a=n(4996),c=["components"],s={title:"Introduction",slug:"/"},l={unversionedId:"intro",id:"intro",isDocsHomePage:!1,title:"Introduction",description:"What is Botrino?",source:"@site/docs/intro.md",sourceDirName:".",slug:"/",permalink:"/docs/",editUrl:"https://github.com/Alex1304/botrino/edit/main/website/docs/intro.md",version:"current",frontMatter:{title:"Introduction",slug:"/"},sidebar:"someSidebar",next:{title:"Getting Started",permalink:"/docs/getting-started"}},u=[{value:"What is Botrino?",id:"what-is-botrino",children:[]},{value:"Motivations",id:"motivations",children:[]},{value:"Overview",id:"overview",children:[]}],p={toc:u};function d(e){var t=e.components,n=(0,o.Z)(e,c);return(0,i.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("img",{style:{float:"right",padding:"5%"},src:(0,a.Z)("img/logo.svg"),width:"20%",alt:""}),(0,i.kt)("h2",{id:"what-is-botrino"},"What is Botrino?"),(0,i.kt)("p",null,"Botrino is a Java framework that provides guidelines and a set of tools to build Discord bots in a more convenient way. Pretty much in the same spirit as ",(0,i.kt)("a",{parentName:"p",href:"https://spring.io/projects/spring-boot"},"Spring Boot"),", it allows to easily setup standalone bot applications that are ready to run, embedding a few third-party libraries such as ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/FasterXML/jackson-core"},"Jackson")," for JSON-based configuration, ",(0,i.kt)("a",{parentName:"p",href:"https://alex1304.github.io/rdi/docs/intro"},"RDI")," for a reactive IoC container, and ",(0,i.kt)("a",{parentName:"p",href:"https://discord4j.com"},"Discord4J")," for the interface with the ",(0,i.kt)("a",{parentName:"p",href:"https://discord.com/developers/docs/intro"},"Discord Bot API"),"."),(0,i.kt)("h2",{id:"motivations"},"Motivations"),(0,i.kt)("p",null,"Starting the development of a Discord bot follows most of the time the same pattern: you create a project, import your favorite Discord client library, export a configuration file or an environment variable with the bot token, and design a whole structure for your commands and your logic, before you can actually start to implement them. When working with Java, this structure is even more important otherwise you may adopt bad practices and end up with a bot that is difficult to maintain."),(0,i.kt)("p",null,"This is how came the idea of this project: have something that can handle for you all the initial workflow of setting up a project with a solid structure, at the only cost of letting the framework choose some libraries for you, so that you can focus on what matters. Botrino is born."),(0,i.kt)("p",null,"It also aims at providing a ",(0,i.kt)("a",{parentName:"p",href:"/docs/interaction-library/overview"},"library for Discord's Interaction API")," that integrates well with the structure of Botrino, while still being decoupled from it."),(0,i.kt)("h2",{id:"overview"},"Overview"),(0,i.kt)("p",null,"Botrino utilizes Java modules, introduced in the JDK 9 and released in the JDK 11 as a LTS version. The classes of your application will reside in one or more modules with the following ",(0,i.kt)("inlineCode",{parentName:"p"},"module-info.java")," structure:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"import botrino.api.annotation.BotModule;\n\n@BotModule\nopen module com.example.myproject {\n\n    requires botrino.api;\n}\n")),(0,i.kt)("p",null,"The annotation as well as the ",(0,i.kt)("inlineCode",{parentName:"p"},"open")," modifier will allow Botrino to automatically scan through all the classes present in the module, in order to automatically register configuration entries, commands, services, etc."),(0,i.kt)("p",null,"Inside your module, you can create services using ",(0,i.kt)("a",{parentName:"p",href:"https://alex1304.github.io/rdi/docs/annotation-based-configuration"},"RDI annotations")," that are automatically loaded on startup:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'package com.example.myproject;\n\nimport com.github.alex1304.rdi.finder.annotation.RdiFactory;\nimport com.github.alex1304.rdi.finder.annotation.RdiService;\nimport discord4j.core.GatewayDiscordClient;\nimport discord4j.core.event.domain.lifecycle.ReadyEvent;\nimport reactor.core.publisher.Mono;\nimport reactor.util.Logger;\nimport reactor.util.Loggers;\n\n@RdiService\npublic final class SampleService {\n\n    private static final Logger LOGGER = Loggers.getLogger(SampleService.class);\n\n    // We can inject other services, here we are injecting\n    // the GatewayDiscordClient provided by Botrino\n    @RdiFactory\n    public SampleService(GatewayDiscordClient gateway) {\n        gateway.on(ReadyEvent.class, ready -> Mono.fromRunnable(\n                        () -> LOGGER.info("Logged in as "\n                                + ready.getSelf().getTag())))\n                .subscribe();\n    }\n}\n\n')),(0,i.kt)("p",null,"The bot is configured via a JSON configuration file with contents similar to this:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "bot": {\n        "token": "yourTokenHere",\n        "presence": {\n            "status": "online",\n            "activity_type": "playing",\n            "activity_text": "Hello world!"\n        },\n        "enabled_intents": 32509\n    }\n}\n')),(0,i.kt)("p",null,"To go further and familiarize yourself with the framework, check out the ",(0,i.kt)("a",{parentName:"p",href:"/docs/getting-started"},"Getting Started guide"),"."))}d.isMDXComponent=!0}}]);