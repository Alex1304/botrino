(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{82:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return l})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return p}));var a=n(3),r=n(8),i=(n(0),n(92)),o={title:"Internationalization"},l={unversionedId:"api/i18n",id:"api/i18n",isDocsHomePage:!1,title:"Internationalization",description:"The bot you are developing is likely to be used by people which primary language is not English. To support these users, Botrino encourages the externalization of strings so they can be translated more conveniently.",source:"@site/docs/api/i18n.md",slug:"/api/i18n",permalink:"/docs/api/i18n",editUrl:"https://github.com/Alex1304/botrino/edit/main/website/docs/api/i18n.md",version:"current",sidebar:"someSidebar",previous:{title:"Extensions",permalink:"/docs/api/extensions"},next:{title:"Overview",permalink:"/docs/command-extension/overview"}},c=[{value:"The <code>Translator</code> interface",id:"the-translator-interface",children:[]},{value:"Externalizing strings",id:"externalizing-strings",children:[]},{value:"Using translated strings",id:"using-translated-strings",children:[]}],s={rightToc:c};function p(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"The bot you are developing is likely to be used by people which primary language is not English. To support these users, Botrino encourages the externalization of strings so they can be translated more conveniently."),Object(i.b)("h2",{id:"the-translator-interface"},"The ",Object(i.b)("inlineCode",{parentName:"h2"},"Translator")," interface"),Object(i.b)("p",null,"The ",Object(i.b)("inlineCode",{parentName:"p"},"Translator")," interface has one abstract method ",Object(i.b)("inlineCode",{parentName:"p"},"Locale getLocale()")," which defines what is the target locale of the translator, and a default method ",Object(i.b)("inlineCode",{parentName:"p"},"String translate(String, String, Object...)")," which effectively does the translation. By default, the translate method does the following:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"default String translate(String bundle, String key, Object... args) {\n    return MessageFormat.format(ResourceBundle.getBundle(bundle, getLocale()).getString(key), args);\n}\n")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Strings are located in a ",Object(i.b)("inlineCode",{parentName:"li"},"ResourceBundle")," which name is given. Typically, that's the name of a ",Object(i.b)("inlineCode",{parentName:"li"},".properties")," file located at the root of the resources folder."),Object(i.b)("li",{parentName:"ul"},"Strings are parameterized using ",Object(i.b)("inlineCode",{parentName:"li"},"MessageFormat"),", which aims at being a language-independent way to put variables in a string, unlike ",Object(i.b)("inlineCode",{parentName:"li"},"String.format()"),".")),Object(i.b)("h2",{id:"externalizing-strings"},"Externalizing strings"),Object(i.b)("p",null,"If let's say you have a file named ",Object(i.b)("inlineCode",{parentName:"p"},"AppStrings.properties")," in ",Object(i.b)("inlineCode",{parentName:"p"},"src/main/resources")," with the following contents:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-properties"}),"hello=Hello {0}!\n")),Object(i.b)("p",null,"You can use a translator like this:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),'var tr = Translator.to(Locale.ENGLISH);\nSystem.out.println(tr.translate("AppStrings", "hello", "Alex"));\n')),Object(i.b)("p",null,"Which gives the output:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"Hello Alex!\n")),Object(i.b)("p",null,"What happened here?"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"The first argument of ",Object(i.b)("inlineCode",{parentName:"li"},"tr.translate")," is ",Object(i.b)("inlineCode",{parentName:"li"},"AppStrings"),", so it will look for a ",Object(i.b)("inlineCode",{parentName:"li"},"ResourceBundle")," named ",Object(i.b)("inlineCode",{parentName:"li"},"AppStrings"),". It will find the ",Object(i.b)("inlineCode",{parentName:"li"},"AppStrings.properties")," and will load its content."),Object(i.b)("li",{parentName:"ul"},"The second argument says to find the string with key ",Object(i.b)("inlineCode",{parentName:"li"},"hello"),", which is what we defined earlier."),Object(i.b)("li",{parentName:"ul"},"The third argument will substitute the ",Object(i.b)("inlineCode",{parentName:"li"},"{0}")," of our string with the value at runtime, here ",Object(i.b)("inlineCode",{parentName:"li"},"Alex"),".")),Object(i.b)("div",{className:"admonition admonition-info alert alert--info"},Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(i.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"info")),Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"To learn more about resource bundles and string argument formatting, check out the Javadoc for ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/ResourceBundle.html"}),Object(i.b)("inlineCode",{parentName:"a"},"ResourceBundle"))," and ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/text/MessageFormat.html"}),Object(i.b)("inlineCode",{parentName:"a"},"MessageFormat")),". Note that since ",Object(i.b)("inlineCode",{parentName:"p"},"Translator.translate")," is a default interface method and thus can be overriden, you may customize the way translations are retrieved, but this section will only document the default behavior."))),Object(i.b)("h2",{id:"using-translated-strings"},"Using translated strings"),Object(i.b)("p",null,"Once a string is properly externalized, it is possible to add a translation for it by duplicating the resource file and naming it with the locale suffix. For example, if you have ",Object(i.b)("inlineCode",{parentName:"p"},"src/main/resources/AppStrings.properties")," and want to translate it in French, you will duplicate the file and name the copy ",Object(i.b)("inlineCode",{parentName:"p"},"src/main/resources/AppStrings_fr.properties"),". The way to name the translated files is documented in the ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/ResourceBundle.html"}),Object(i.b)("inlineCode",{parentName:"a"},"ResourceBundle")," javadoc"),"."),Object(i.b)("p",null,"In your ",Object(i.b)("inlineCode",{parentName:"p"},"AppStrings_fr.properties"),", you will translate the value of the ",Object(i.b)("inlineCode",{parentName:"p"},"hello")," string:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-properties"}),"hello=Bonjour {0} !\n")),Object(i.b)("p",null,"In your Java code, you can now specify either English or French locale and the string will adapt automatically:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),'var tr1 = Translator.to(Locale.ENGLISH);\nvar tr2 = Translator.to(Locale.FRENCH);\nSystem.out.println(tr1.translate("AppStrings", "hello", "Alex"));\nSystem.out.println(tr2.translate("AppStrings", "hello", "Alex")); // notice we use exact same arguments\n')),Object(i.b)("p",null,"Which gives the output you want:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"Hello Alex!\nBonjour Alex !\n")))}p.isMDXComponent=!0},92:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return m}));var a=n(0),r=n.n(a);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=r.a.createContext({}),p=function(e){var t=r.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},b=function(e){var t=p(e.components);return r.a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},d=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),b=p(n),d=a,m=b["".concat(o,".").concat(d)]||b[d]||u[d]||i;return n?r.a.createElement(m,l(l({ref:t},s),{},{components:n})):r.a.createElement(m,l({ref:t},s))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var s=2;s<i;s++)o[s]=n[s];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);